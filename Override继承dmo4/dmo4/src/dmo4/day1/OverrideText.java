package dmo4.day1;

/*
 * java方法的重载  回顾
 * 		Override
 * 		1.方法重载什么时候使用
 * 			当在同一个类当中，方法完成的功能是相似的，建议方法名相同
 * 
 * 		2.什么条件满足之后构成方法重载
 * 			*在同一类
 * 			*方法名相同
 * 			*参数列表不同：类型、顺序、个数 
 * 
 *  	3.方法重载和为什么无关
 *  			*和方法的返回值类型无关
 *  			*和方法的修饰符列表无关
 * 		
 */
public class OverrideText {
	/*
	 *  关于java语言当中的方法覆盖
	 *  		1.方法覆盖又称为方法重写：英文：override
	 *  		2.什么时候使用方法重写
	 *  			当父类的方法已经无法满足当前子类的业务需要
	 *  			子类必要将父类中继承过来的方法进行重新编写
	 *  			这个重新编写的过程称为方法 重写/方法覆盖 
	 *  		3.什么条件满足后会发生重写
	 *  			* 方法重写发生在具有 继承关系的父子类之间
	 *  			* 方法重写的时候：返回值类型相同，方法名相同 ，形参列表相同
	 *  			* 方法重写的时候：访问权限不能更低 可以更高
	 *  		4.建议方法重写的时候尽量复制粘贴,不要编写容易出错
	 *  		5.私有方法不能继承，所以不能覆盖
	 *  		  构造方法不能继承，所以不能覆盖
	 *  		  静态方法不存在覆盖，覆盖 只针对方法  不针对属性
	 */
	public static void main(String[] args) {
		Animal a = new Animal();
		a.move();
		
		// 创建猫科类动物对象
		Cat c = new Cat();
		c.move();
		// 创建飞禽类动物对象
		Bird b = new Bird();
		b.move();
		//创建鹦鹉对象
		YingWu Y = new YingWu();
		Y.move();

	}

}
